{"version":3,"sources":["components/welcome/ExternalLinks.js","components/welcome/Welcome.js","components/nav/NavComp.js","components/projects/Project.js","components/projects/Projects.js","components/about/About.js","App.js","serviceWorker.js","index.js"],"names":["ExternalLinks","react_default","a","createElement","Row","className","href","class","src","alt","Welcome","Container","welcome_ExternalLinks","NavComp","react","Navbar","NavbarBrand","Nav","Project","_ref","link","name","text","img","Col","Card","CardImg","top","width","CardBody","CardTitle","CardText","kunst","subtle","skypish","Projects","projects_Project","About","App","nav_NavComp","welcome_Welcome","about_About","projects_Projects","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f6c3529.chunk.js","sourcesContent":["import React from 'react';\nimport {Row} from 'reactstrap'\n\nconst gitHubImg = \"https://cdn3.iconfinder.com/data/icons/social-icons-24/24/Github-512.png\"\n\nconst gitHubLink = \"https://github.com/aebenw\"\n\nconst linkedInLink = \"https://www.linkedin.com/in/eben-woodward\"\n\nconst linkedInImg = \"https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fpluspng.com%2Fimg-png%2Flinkedin-png-linkedin-icon-1600.png&f=1\";\n\n\n\n\n\nconst ExternalLinks = () => {\n  return(\n    <Row className=\"external-links\">\n\n      <a href={gitHubLink}>\n        <img class=\"welcome-logo\" src={gitHubImg} alt=\"github logo\"/>\n      </a>\n      <a href={linkedInLink} >\n      <img class=\"welcome-logo\" src={linkedInImg} alt=\"LinkedIn logo\"/>\n      </a>\n    </Row>\n\n  )\n}\n\nexport default ExternalLinks;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ExternalLinks from './ExternalLinks'\n\nconst Welcome = () =>{\n\n  return(\n    <div className=\"welcome\">\n    <Container>\n      <div className=\"welcome-content\">\n      <Row>\n        <h1 className=\"info\">Eben Woodward</h1>\n      </Row>\n      <Row>\n        <h3 className=\"info\">Software Developer</h3>\n      </Row>\n      <ExternalLinks />\n    </div>\n    </Container>\n    </div>\n  )\n\n}\n\nexport default Welcome;\n","import React,{Fragment} from 'react';\n\n// import NavButton from './Navbutton'\n\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink} from 'reactstrap';\n\nconst NavComp = () => {\n  return(\n    <Fragment>\n      <Navbar>\n        <NavbarBrand>EW</NavbarBrand>\n        <Nav>\n          {/* <NavItem>\n            <NavLink>Projects</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink>About</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink>Contact</NavLink>\n          </NavItem> */}\n        </Nav>\n      </Navbar>\n    </Fragment>\n  )\n\n}\n\nexport default NavComp\n","import React from 'react';\n\nimport { Col, Card, CardTitle, CardText, CardImg, CardBody } from 'reactstrap'\n\nconst Project = ({link, name, text, img}) => {\n  return(\n    <Col>\n      <Card>\n        <a href={link}>\n          <CardImg top width=\"100%\" src={img} />\n        </a>\n        <CardBody>\n        <CardTitle className=\"info project-title\">{name}</CardTitle>\n        <CardText>{text}</CardText>\n        </CardBody>\n      </Card>\n    </Col>\n  )\n}\n\nexport default Project\n","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport Project from './Project'\n\n\n///////////Good idea to use the GITHUB API and grab my Pinned Projects\n\nconst kunst = {\n  name: \"Kunst\",\n  link: \"https://www.youtube.com/watch?v=IiEX0H9KfbI\",\n  text: \"See what a painting looks like in a gallery.\",\n  img: \"https://s3.amazonaws.com/personaleben/Screen+Shot+2019-01-09+at+4.24.08+PM.png\"\n}\n\nconst subtle = {\n  name: \"Subtle\",\n  link: \"https://limitless-sands-48235.herokuapp.com/home\",\n  text: \"A subtly designed social networking application\",\n  img: \"https://s3.amazonaws.com/personaleben/Screen+Shot+2019-01-09+at+4.46.47+PM.png\"\n}\n\nconst skypish = {\n  name: \"Skypish\",\n  link: \"https://frontendskype.herokuapp.com/\",\n  text: \"A video chat and messaging app\",\n  img: \"https://s3.amazonaws.com/personaleben/Skypish.png\"\n}\n\n\nconst Projects = () => {\n  return(\n    <Container>\n      <Row>\n      <h3 className=\"info header\">Projects</h3>\n      </Row>\n      <Row>\n        <Project link={subtle.link} name={subtle.name} text={subtle.text} img={subtle.img}/>\n        <Project link={skypish.link} name={skypish.name} text={skypish.text} img={skypish.img}/>\n        <Project link={kunst.link} name={kunst.name} text={kunst.text} img={kunst.img}/>\n      </Row>\n    </Container>\n  )\n\n}\n\nexport default Projects\n","import React from 'react';\n\nimport { Container, Row, Col } from 'reactstrap'\n\nconst profImg = \"https://s3.amazonaws.com/personaleben/lady_liberty.png\"\n\nconst About = () => {\n  return(\n    <Container>\n        <h3 className=\"info header\">About me</h3>\n        <Container>\n          <Row>\n            {/* <Col> */}\n            <div className=\"profile\">\n              <img className=\"profile-image\" src={profImg} alt=\"Eben at lady liberty\"/>\n            </div>\n            {/* </Col>\n            <Col> */}\n            <div className=\"profile-text\">\n              <h4 className=\"prof-text\">Carpenter turned coder</h4>\n            </div>\n            {/* </Col> */}\n          </Row>\n        </Container>\n    </Container>\n  )\n}\n\nexport default About\n","import React, { Component } from 'react';\nimport Welcome from './components/welcome/Welcome.js';\nimport NavBar from './components/nav/NavComp'\nimport Projects from './components/projects/Projects'\nimport About from './components/about/About.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <div class=\"section1\">\n          <Welcome />\n        </div>\n        <div class=\"section\">\n          <About />\n        </div>\n        <div class=\"section1\">\n          <Projects />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// import React, { Component } from 'react';\n// import WelcomeMessage from './components/Welcome';\n//\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <WelcomeMessage />\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n//\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}